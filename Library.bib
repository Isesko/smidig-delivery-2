@article{AgileSoftwareDevelopment2024,
  title = {Agile Software Development},
  year = {2024},
  month = may,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {Agile software development is the mindset for developing software that derives from values agreed upon by The Agile Alliance, a group of 17 software practitioners in 2001. As documented in their Manifesto for Agile Software Development the practitioners value:  Individuals and interactions over processes and tools Working software over comprehensive documentation Customer collaboration over contract negotiation Responding to change over following a plan The practitioners cite inspiration from new practices at the time including extreme programming, scrum, dynamic systems development method, adaptive software development and being sympathetic to the need for an alternative to documentation driven, heavyweight software development processes.  Many software development practices emerged from the agile mindset. These agile-based practices, sometimes called Agile (with a capital A) include requirements, discovery and solutions improvement through the collaborative effort of self-organizing and cross-functional teams with their customer(s)/end user(s). While there is much anecdotal evidence that the agile mindset and agile-based practices improve the software development process, the empirical evidence is limited and less than conclusive.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1222507673},
  file = {/home/joar/Zotero/storage/877IV4HP/Agile_software_development.html}
}

@article{Backlog2022,
  title = {Backlog},
  year = {2022},
  month = oct,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {Backlog may refer to:},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1115858432},
  file = {/home/joar/Zotero/storage/W29F6VQE/Backlog.html}
}

@article{ComponentbasedSoftwareEngineering2024,
  title = {Component-Based Software Engineering},
  year = {2024},
  month = may,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {Component-based software engineering (CBSE), also called component-based development (CBD), is a style of software engineering that aims to construct a software system from components that are loosely-coupled and reusable. This emphasizes the separation of concerns among components. To find the right level of component granularity, software architects have to continuously iterate their component designs with developers. Architects need to take into account user requirements, responsibilities and architectural characteristics.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1226023661},
  file = {/home/joar/Zotero/storage/ABCQ8P7M/Component-based_software_engineering.html}
}

@article{DesignSprint2024,
  title = {Design Sprint},
  year = {2024},
  month = apr,
  journal = {Wikipedia},
  urldate = {2024-05-24},
  abstract = {A design sprint is a time-constrained, five-phase process that uses design thinking with the aim of reducing the risk when bringing a new product, service or a feature to the market. The process aims to help teams to clearly define goals, validate assumptions and decide on a product roadmap before starting development. It seeks to address strategic issues using interdisciplinary expertise, rapid prototyping, and usability testing. This design process is similar to Sprints in an Agile development cycle.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1216839169},
  file = {/home/joar/Zotero/storage/RM6KLG4S/Design_sprint.html}
}

@article{DesignSprint2024a,
  title = {Design Sprint},
  year = {2024},
  month = apr,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {A design sprint is a time-constrained, five-phase process that uses design thinking with the aim of reducing the risk when bringing a new product, service or a feature to the market. The process aims to help teams to clearly define goals, validate assumptions and decide on a product roadmap before starting development. It seeks to address strategic issues using interdisciplinary expertise, rapid prototyping, and usability testing. This design process is similar to Sprints in an Agile development cycle.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1216839169},
  file = {/home/joar/Zotero/storage/YTGZJGSF/Design_sprint.html}
}

@misc{ECMA262,
  title = {{{ECMA-262}}},
  journal = {Ecma International},
  urldate = {2024-06-02},
  abstract = {ECMAScript{\textregistered} 2023 language specification, 14th edition - ECMAScript is a programming language based on several technologies like JavaScript.},
  langid = {american},
  file = {/home/joar/Zotero/storage/JBNJSLQD/ecma-262.html}
}

@misc{FigmaCollaborativeInterface,
  title = {Figma: {{The Collaborative Interface Design Tool}}},
  shorttitle = {Figma},
  journal = {Figma},
  urldate = {2024-05-24},
  abstract = {Figma is the leading collaborative design tool for building meaningful products. Seamlessly design, prototype, develop, and collect feedback in a single platform.},
  howpublished = {https://www.figma.com/},
  langid = {american},
  file = {/home/joar/Zotero/storage/TYGSTSL3/www.figma.com.html}
}

@misc{ManifestoAgileSoftware,
  title = {Manifesto for {{Agile Software Development}}},
  urldate = {2024-06-02},
  howpublished = {http://agilemanifesto.org/},
  file = {/home/joar/Zotero/storage/Z78NIIEU/agilemanifesto.org.html}
}

@article{ParkinsonLaw2024,
  title = {Parkinson's Law},
  year = {2024},
  month = apr,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {Parkinson's law can refer to either of two observations, published in 1955 by the naval historian C. Northcote Parkinson as an essay in The Economist: "work expands so as to fill the time available for its completion", the number of workers within public administration, bureaucracy or officialdom tends to grow, regardless of the amount of work to be done. This was attributed mainly to two factors: that officials want subordinates, not rivals, and that officials make work for each other. The first paragraph of the essay mentioned the first meaning above as a "commonplace observation", and the rest of the essay was devoted to the latter observation, terming it "Parkinson's Law".},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1221036066},
  file = {/home/joar/Zotero/storage/L7E4XP4E/Parkinson's_law.html}
}

@misc{PenpotDesignTool,
  title = {Penpot: {{The Design Tool}} for {{Design}} \& {{Code Collaboration}}},
  shorttitle = {Penpot},
  urldate = {2024-05-24},
  abstract = {Penpot is the open-source free design software that connects designers and developers with no handoff drama. Prototyping, UI design and code - all in one app.},
  howpublished = {https://penpot.app/},
  langid = {english},
  file = {/home/joar/Zotero/storage/N3BLSWN7/penpot.app.html}
}

@misc{PullRequests,
  title = {About Pull Requests},
  journal = {GitHub Docs},
  urldate = {2024-06-02},
  abstract = {Pull requests let you tell others about changes you've pushed to a branch in a repository on GitHub. Once a pull request is opened, you can discuss and review the potential changes with collaborators and add follow-up commits before your changes are merged into the base branch.},
  howpublished = {https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests},
  langid = {english},
  file = {/home/joar/Zotero/storage/JHLXH9EK/about-pull-requests.html}
}

@misc{React,
  title = {React},
  urldate = {2024-06-02},
  abstract = {React is the library for web and native user interfaces. Build user interfaces out of individual pieces called components written in JavaScript. React is designed to let you seamlessly combine components written by independent people, teams, and organizations.},
  howpublished = {https://react.dev/},
  langid = {english},
  file = {/home/joar/Zotero/storage/8QS8WBA9/react.dev.html}
}

@article{Scrum2023,
  title = {{Scrum}},
  year = {2023},
  month = dec,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {Innen prosjektledelse er scrum et rammeverk for {\aa} utvikle, levere og opprettholde produkter i et komplekst milj{\o}. Scrum har sin bakgrunn fra programvareutvikling, men har ogs{\aa} blitt brukt i andre felt inkludert forskning, salg, markedsf{\o}ring og h{\o}yteknologi. Metodikken er designet for team med 3 til 10 medlemmer, og bryter ned arbeidet i m{\aa}l (sprintk{\o}er) som skal fullf{\o}res innen tidsbokser kalt sprinter. Sprintene har som regel varighet ikke lengre enn en m{\aa}ned og oftest to uker. Scrumteamet vurderer fremgangen i daglige m{\o}ter p{\aa} 15 minutter eller mindre kalt daglige scrums (en form for st{\aa}m{\o}te). P{\aa} slutten av sprinten har teamet har ytterligere to m{\o}ter, henholdsvis sprintgjennomgang hvor man viser utf{\o}rt arbeid for interessenten for {\aa} f{\aa} tilbakemeldinger, og sprintevaluering hvor teamet kan reflektere og forbedre seg.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {norwegianbokmal},
  annotation = {Page Version ID: 24092351},
  file = {/home/joar/Zotero/storage/BHYMSMZN/Scrum.html}
}

@misc{scrumwiseScrumToolsScrum,
  title = {Scrum {{Tools}} / {{Scrum Software}}},
  author = {Scrumwise},
  journal = {Scrumwise},
  urldate = {2024-06-02},
  abstract = {The easiest Scrum tool you'll find. Scrumwise lets you focus on your Scrum project, instead of getting lost in a complex tool.},
  howpublished = {https://www.scrumwise.com},
  langid = {english},
  file = {/home/joar/Zotero/storage/JLXH7EMX/www.scrumwise.com.html}
}

@misc{ShowitDocsSecurity,
  title = {Show-It/Docs/{{Security Practices}} and {{Standards}} for the {{Development Process}} at Patch-1 {$\cdot$} Yg400/Show-It},
  urldate = {2024-06-02},
  howpublished = {https://github.com/yg400/show-it/blob/patch-1/docs/Security\%20Practices\%20and\%20Standards\%20for\%20the\%20Development\%20Process},
  file = {/home/joar/Zotero/storage/VQVTPJSW/Security Practices and Standards for the Development Process.html}
}

@article{Storyboard2024,
  title = {Storyboard},
  year = {2024},
  month = apr,
  journal = {Wikipedia},
  urldate = {2024-05-24},
  abstract = {A storyboard is a graphic organizer that consists of illustrations or images displayed in sequence for the purpose of pre-visualizing a motion picture, animation, motion graphic or interactive media sequence. The storyboarding process, in the form it is known today, was developed at Walt Disney Productions during the early 1930s, after several years of similar processes being in use at Walt Disney and other animation studios.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1219212150},
  file = {/home/joar/Zotero/storage/UKZRF3CV/Storyboard.html}
}

@article{Timeboxing2024,
  title = {Timeboxing},
  year = {2024},
  month = apr,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {In agile principles, timeboxing allocates a maximum unit of time to an activity, called a timebox, within which a planned activity takes place. It is used by agile principles-based  project management approaches and for personal time management.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1216839149},
  file = {/home/joar/Zotero/storage/DC2RTGGA/Timeboxing.html}
}

@misc{Vite,
  title = {Vite},
  journal = {vitejs},
  urldate = {2024-06-02},
  abstract = {Next Generation Frontend Tooling},
  howpublished = {https://vitejs.dev},
  langid = {american},
  file = {/home/joar/Zotero/storage/MTHGGEG9/vitejs.dev.html}
}

@misc{WhatHowMight,
  title = {What Is {{How Might We}} ({{HMW}})? --- Updated 2024},
  shorttitle = {What Is {{How Might We}} ({{HMW}})?},
  journal = {The Interaction Design Foundation},
  urldate = {2024-05-24},
  abstract = {How Might We is a design thinking method where designers create questions that open up ideation sessions to generate a broad number of solutions.},
  howpublished = {https://www.interaction-design.org/literature/topics/how-might-we},
  langid = {english},
  file = {/home/joar/Zotero/storage/X88DF8UK/how-might-we.html}
}
